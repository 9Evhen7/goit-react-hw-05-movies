{"version":3,"file":"static/js/34.30b1405c.chunk.js","mappings":"4SAGaA,EAAOC,EAAAA,GAAAA,GAAH,iGAOJC,EAAWD,EAAAA,GAAAA,GAAH,4JAWRE,GAAWF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sE,SClBRI,EAAa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KACnC,OACE,SAACP,EAAD,UACGM,EAAOE,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,SAACR,EAAD,WACE,UAACC,EAAD,CAAUQ,GAAE,UAAKF,GAAMG,MAAO,CAAEC,KAAMN,GAAtC,WACE,wBAAKG,KACL,+BAAOD,SAHIA,EAOlB,KAGN,E,UChBYK,EAAOb,EAAAA,GAAAA,KAAH,gDAIJc,EAAQd,EAAAA,GAAAA,MAAH,+CAILe,EAASf,EAAAA,GAAAA,OAAH,qICyCnB,EA5Ce,WAAO,IAAD,EAEnBgB,IAAAA,SAAAA,QAAA,4DADe,mCACf,8CAEA,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOf,EAAP,KAAegB,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAK,UAAGN,EAAaO,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,oGACyBV,IAAAA,IAAA,iBAAoBQ,IAD7C,OACQG,EADR,OAEEN,GAAU,OAAIM,EAASC,KAAKC,UAF9B,4CAHc,sBACA,KAAVL,IAMJH,EAAU,IAPI,mCAQdS,GACD,GAAE,CAACN,IAEJ,IAAMO,EAAS,mCAAG,WAAMC,GAAN,uEAChBA,EAAEC,iBACIC,EAAOF,EAAEG,cACfhB,EAAgB,CAAEK,MAAOU,EAAKE,SAASC,UAAU,UAAUC,QAC3DJ,EAAKK,QAJW,2CAAH,sDAOf,OACE,iCACE,UAAC1B,EAAD,CACE2B,SAAU,SAAAR,GACRD,EAAUC,EACX,EAHH,WAKE,SAAClB,EAAD,CAAO2B,KAAK,SAASC,KAAK,UAC1B,SAAC3B,EAAD,CAAQ2B,KAAK,SAAb,uBAGDrC,EAAOsC,OAAS,IAAK,SAACvC,EAAD,CAAYC,OAAQA,EAAQC,KAAMgB,MAG7D,C","sources":["components/MoviesList/styledMoviesList.js","components/MoviesList/MoviesList.jsx","pages/Movies/styledMovies.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  width: fit-content;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 12px;\n  width: 100%;\n  padding: 4px;\n\n  &:hover {\n    background-color: white;\n    border-radius: 6px;\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: darkblue;\n`;\n","import { List, ListItem, ItemLink } from './styledMoviesList';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies, path }) => {\n  return (\n    <List>\n      {movies.map(({ id, original_title }) => {\n        return (\n          <ListItem key={id}>\n            <ItemLink to={`${id}`} state={{ from: path }}>\n              <h2>{original_title}</h2>\n              <p>id:{id}</p>\n            </ItemLink>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n  path: PropTypes.object,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin-bottom: 12px;\n`;\n\nexport const Input = styled.input`\n  margin-right: 12px;\n`;\n\nexport const Button = styled.button`\n  border: none;\n  padding: 4px;\n  border-radius: 6px;\n  background-color: lightblue;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport axios from 'axios';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { Input, Button, Form } from './styledMovies';\n\nconst Movies = () => {\n  const apiKey = '09c85c81493fa6062c48f1c67aec4f00';\n  axios.defaults.baseURL = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&page=1&include_adult=false`;\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (query === '') return;\n\n    async function fetchMovies() {\n      const response = await axios.get(`&query=${query}`);\n      setMovies([...response.data.results]);\n    }\n    setMovies([]);\n    fetchMovies();\n  }, [query]);\n\n  const getMovies = async e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.namedItem('search').value });\n    form.reset();\n  };\n\n  return (\n    <>\n      <Form\n        onSubmit={e => {\n          getMovies(e);\n        }}\n      >\n        <Input name=\"search\" type=\"text\" />\n        <Button type=\"submit\">search</Button>\n      </Form>\n\n      {movies.length > 0 && <MoviesList movies={movies} path={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","ListItem","ItemLink","Link","MoviesList","movies","path","map","id","original_title","to","state","from","Form","Input","Button","axios","useSearchParams","searchParams","setSearchParams","useState","setMovies","location","useLocation","query","get","useEffect","response","data","results","fetchMovies","getMovies","e","preventDefault","form","currentTarget","elements","namedItem","value","reset","onSubmit","name","type","length"],"sourceRoot":""}